{"version":3,"sources":["d.png","e.png","App.tsx","index.tsx"],"names":["App","useState","key","setKey","encrypted","setEncrypted","decrypted","setDecrypted","n","charToInt","c","charCodeAt","encrypt","useCallback","tmp","toLocaleLowerCase","decrypt","encryptStr","str","String","fromCharCode","Array","from","map","buttonStyle","fontFamily","fontSize","padding","ctrlWrapperStyle","display","flexWrap","justifyContent","margin","width","textStyle","bg","background","border","letterSpacing","dSize","useEffect","style","onClick","value","onChange","e","val","target","type","d","backgroundSize","height","placeContent","src","alt","alignSelf","transform","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,MAA0B,8BCA1B,MAA0B,8BC4G1BA,MAvGf,WAAgB,IAAD,EACSC,mBAAS,GADlB,mBACNC,EADM,KACDC,EADC,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGqBJ,mBAAS,SAH9B,mBAGNK,EAHM,KAGKC,EAHL,KAKPC,EAAI,GAGJC,EAAY,SAACC,GAAD,OAAuBA,EAAEC,WAAW,IAEhDC,EAAUC,uBAAY,SAACH,GAC3B,GAAU,MAANA,EAAW,OAAOD,EAAU,KAChC,IAAMK,EAAML,EAAUC,GAAKR,EAE3B,OAAOY,GADGL,EAAUC,IAAMA,EAAEK,oBAAsB,IAAM,KACtCD,EAAMA,EAAMN,IAC7B,CAACN,IAEEc,EAAU,SAACN,GACf,GAAU,MAANA,EAAW,OAAOD,EAAU,KAChC,IAAMK,EAAML,EAAUC,GAAKR,EAE3B,OAAOY,GADGL,EAAUC,IAAMA,EAAEK,oBAAsB,IAAM,KACtCD,EAAMA,EAAMN,GAG1BS,EAAaJ,uBAAY,SAACK,GAAD,OAAyBC,OAAOC,aAAP,MAAAD,OAAM,YAAiBE,MAAMC,KAAKJ,GAAKK,IAAIX,OAAW,CAACA,IAezGY,EAAmC,CACvCC,WAAY,2BACZC,SAAU,OACVC,QAAS,YAGLC,EAAwC,CAC5CC,QAAS,OACTC,SAAU,OACVL,WAAY,2BACZC,SAAU,OACVK,eAAgB,gBAChBC,OAAQ,YACRC,MAAO,SAGHC,EAAY,SAACC,GACjB,MAAO,CACLC,WAAYD,EACZE,OAAQ,IACRZ,WAAY,2BACZC,SAAU,OACVY,cAAe,OACfX,QAAS,OACTM,MAAO,SAKLM,EAAQ,MAKd,OAFAC,qBAAU,kBAAMnC,EAAaY,EAAWX,MAAa,CAACJ,EAAKe,EAAYX,IAGrE,sBAAKmC,MAAO,CAAER,MAAO,cAAeD,OAAQ,QAA5C,UACE,sBAAKS,MAAOb,EAAZ,UACE,wBAAQc,QAAS,kBAAMvC,GAAQD,EAAMM,EAAI,GAAKA,IAAIiC,MAAOjB,EAAzD,eACA,0CAAatB,KACb,wBAAQwC,QAAS,kBAAMvC,GAAQD,EAAM,GAAKM,IAAIiC,MAAOjB,EAArD,kBAEF,sBAAKiB,MAAOb,EAAZ,UACE,uBAAOe,MAAOrC,EAAWsC,SAhDT,SAACC,GACrB,IAAMC,EAAMD,EAAEE,OAAOJ,MACrBpC,EAAauC,GACbzC,EAAaY,EAAW6B,KA6C8BL,MAAOP,EAAU,WAAYc,KAAK,SACpF,uBAAOL,MAAOvC,EAAWwC,SAvDT,SAACC,GACrB,IAHkB3B,EAGZ4B,EAAMD,EAAEE,OAAOJ,MACrBtC,EAAayC,GACbvC,GALkBW,EAKM4B,EALkB3B,OAAOC,aAAP,MAAAD,OAAM,YAAiBE,MAAMC,KAAKJ,GAAKK,IAAIP,QAyD/ByB,MAAOP,EAAU,WAAYc,KAAK,YAEtF,qBAAKP,MAAO,CACVL,WAAW,OAAD,OAASa,EAAT,sBACVC,eAAe,GAAD,OAAKX,EAAL,cAAgBA,EAAhB,MACdV,QAAS,OACTsB,OAAO,GAAD,OAAKZ,EAAL,MACNa,aAAc,SACdnB,MAAM,GAAD,OAAKM,EAAL,OANP,SAQE,qBAAKc,IAAKR,EAAGS,IAAI,IAAIb,MAAO,CAC1Bc,UAAW,SACXJ,OAAO,GAAD,OAzBA,MAyBA,MACNK,UAAU,UAAD,QAzFK,IAAMhD,EAAIN,EAyFf,QACT+B,MAAM,GAAD,OA3BC,MA2BD,eCjGfwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35bec589.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/d.4e7fcedf.png\";","export default __webpack_public_path__ + \"static/media/e.239d7bae.png\";","import React, { useCallback, useEffect, useState } from 'react';\n\nimport d from './d.png';\nimport e from './e.png';\n\nfunction App() {\n  const [key, setKey] = useState(0);\n  const [encrypted, setEncrypted] = useState('');\n  const [decrypted, setDecrypted] = useState('hello');\n\n  const n = 26;\n  const degree = () => -360 / n * key;\n\n  const charToInt = (c: string): number => c.charCodeAt(0);\n\n  const encrypt = useCallback((c: string): number => {\n    if (c === ' ') return charToInt(' ');\n    const tmp = charToInt(c) + key;\n    const z = charToInt(c === c.toLocaleLowerCase() ? 'z' : 'Z');\n    return tmp <= z ? tmp : tmp - n;\n  }, [key]);\n\n  const decrypt = (c: string): number => {\n    if (c === ' ') return charToInt(' ');\n    const tmp = charToInt(c) - key;\n    const a = charToInt(c === c.toLocaleLowerCase() ? 'a' : 'A');\n    return tmp >= a ? tmp : tmp + n;\n  };\n\n  const encryptStr = useCallback((str: string): string => String.fromCharCode(...Array.from(str).map(encrypt)), [encrypt]);\n  const decryptStr = (str: string): string => String.fromCharCode(...Array.from(str).map(decrypt));\n\n  const changeEncrypt = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const val = e.target.value;\n    setEncrypted(val);\n    setDecrypted(decryptStr(val));\n  };\n\n  const changeDecrypt = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const val = e.target.value;\n    setDecrypted(val);\n    setEncrypted(encryptStr(val));\n  };\n\n  const buttonStyle: React.CSSProperties = {\n    fontFamily: '\\'Ubuntu Mono\\', monospace',\n    fontSize: '12pt',\n    padding: '5px 10px'\n  };\n\n  const ctrlWrapperStyle: React.CSSProperties = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    fontFamily: '\\'Ubuntu Mono\\', monospace',\n    fontSize: '15pt',\n    justifyContent: 'space-between',\n    margin: '25px auto',\n    width: '600px'\n  };\n\n  const textStyle = (bg: string): React.CSSProperties => {\n    return {\n      background: bg,\n      border: '0',\n      fontFamily: '\\'Ubuntu Mono\\', monospace',\n      fontSize: '15pt',\n      letterSpacing: '15px',\n      padding: '10px',\n      width: '100%'\n    }\n  };\n\n  const zoom = 0.7\n  const dSize = 864 * zoom;\n  const eSize = 686 * zoom;\n\n  useEffect(() => setEncrypted(encryptStr(decrypted)), [key, encryptStr, decrypted]);\n\n  return (\n    <div style={{ width: 'min-content', margin: 'auto' }}>\n      <div style={ctrlWrapperStyle}>\n        <button onClick={() => setKey((key + n - 1) % n)} style={buttonStyle}>-</button>\n        <span>key = {key}</span>\n        <button onClick={() => setKey((key + 1) % n)} style={buttonStyle}>+</button>\n      </div>\n      <div style={ctrlWrapperStyle}>\n        <input value={decrypted} onChange={changeDecrypt} style={textStyle('#e8f0fe')} type='text' />\n        <input value={encrypted} onChange={changeEncrypt} style={textStyle('#fef7e0')} type='text' />\n      </div>\n      <div style={{\n        background: `url(${d}) center no-repeat`,\n        backgroundSize: `${dSize}px ${dSize}px`,\n        display: 'flex',\n        height: `${dSize}px`,\n        placeContent: 'center',\n        width: `${dSize}px`\n      }}>\n        <img src={e} alt='e' style={{\n          alignSelf: 'center',\n          height: `${eSize}px`,\n          transform: `rotate(${degree()}deg)`,\n          width: `${eSize}px`\n        }} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}